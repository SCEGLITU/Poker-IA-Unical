%SORTED POINT LIST
    % royalStraight, colorStraight, poker(N), full(X, X1), color, straight
    % tris(N), doubleCouple(N1,N2), couple(N), highestCard(N)
    %END


keep(S, N)|discard(S, N):- card(S,N).

:~ keep(S, N), card(S,N). [1 @ 1, N]

:- discard(_,_), full(_,_).
:- discard(_,N), poker(N).
:- discard(_,_), straight.
:- discard(_,_), colorStraight.
:- discard(_,_), color.
:- discard(_,_), royalStraight.

:~ discard(_,N),  couple(N).			[20 @ 1, N]
:~ discard(_,N),  doubleCouple(N,N2).	[20 @ 1, N]
:~ discard(_,N2), doubleCouple(N,N2).	[20 @ 1, N]
:~ discard(_,N),  tris(N).				[20 @ 1, N]

:~ couple(N), keep(_,N1), N1!=N, not doubleCouple. [8 @ 1, N]
:~ keep(_,N1), doubleCouple(_,N), N1!=N. [15 @ 1]
:~ keep(_,N1), doubleCouple(N,_), N1!=N. [15 @ 1]
:~ keep(_,N1),  		 tris(N), N1!=N. [35 @ 1]
:~ keep(_,N1),  		poker(N), N1!=N. [45 @ 1]



:~ discard(_,N), highestCard(N), N>=10.	[ 5 @ 1, N]
:~ discard(_,N), highestCard(N), N=1.	[ 5 @ 1, N]

:~ discard(_,N), highestCard(N), N>=10, not highestCoupleCard. 			[20 @ 1, N]
:~ discard(_,N), highestCard(N),   N=1, not highestCoupleCard.			[20 @ 1, N]
:~ card(S,N), keep(S,N), not highestCoupleCard, highestCard(N1), N!=N1, not semiStraight.	[  2 @ 1, N]

:~ not semiStraight(S,N), keep   (S,N), semiStraight. [50@ 1]
:~     semiStraight(S,N), discard(S,N).				  [20@ 1, N]

:~ semiColorOne(S), discard(S,_).			   [10 @ 1]
:~ semiColorTwo(S), discard(S,_).			   [5 @ 1]

semiStraight:- semiStraight(_,_).

% semi normal straight

semiStraight(S,N):- 
				card(S, N),
				card(_, N + 1),
				card(_, N + 2),
				card(_, N + 3), not straight.
semiStraight(S,N+1):- 
				card(_, N),
				card(S, N + 1),
				card(_, N + 2),
				card(_, N + 3).
semiStraight(S,N+2):- 
				card(_, N),
				card(_, N + 1),
				card(S, N + 2),
				card(_, N + 3).
semiStraight(S,N+3):- 
				card(_, N),
				card(_, N + 1),
				card(_, N + 2),
				card(S, N + 3).
%------------------------------------------
semiStraight(S,N):- 
				card(S, N),
				card(_, N + 2),
				card(_, N + 3),
				card(_, N + 4).
semiStraight(S,N+2):- 
				card(_, N),
				card(S, N + 2),
				card(_, N + 3),
				card(_, N + 4).
semiStraight(S,N+3):- 
				card(_, N),
				card(_, N + 2),
				card(S, N + 3),
				card(_, N + 4).
semiStraight(S,N+4):- 
				card(_, N),
				card(_, N + 2),
				card(_, N + 3),
				card(S, N + 4).
%------------------------------------------
semiStraight(S,N):- 
				card(S, N),
				card(_, N + 1),
				card(_, N + 3),
				card(_, N + 4).
semiStraight(S,N+1):- 
				card(_, N),
				card(S, N + 1),
				card(_, N + 3),
				card(_, N + 4).
semiStraight(S,N+3):- 
				card(_, N),
				card(_, N + 1),
				card(S, N + 3),
				card(_, N + 4).
semiStraight(S,N+4):- 
				card(_, N),
				card(_, N + 1),
				card(_, N + 3),
				card(S, N + 4).
%------------------------------------------
semiStraight(S,N):- 
				card(S, N),
				card(_, N + 1),
				card(_, N + 2),
				card(_, N + 4).
semiStraight(S,N+1):- 
				card(_, N),
				card(S, N + 1),
				card(_, N + 2),
				card(_, N + 4).
semiStraight(S,N+2):- 
				card(_, N),
				card(_, N + 1),
				card(S, N + 2),
				card(_, N + 4).
semiStraight(S,N+4):- 
				card(_, N),
				card(_, N + 1),
				card(_, N + 2),
				card(S, N + 4).
%------------------------------------------


% semiColorOne
semiColorOne(S1) :- #count{A: card(S, A), S=S1} = 4, card(S1,_).

% semiColorTwo
semiColorTwo(S1) :- #count{A: card(S, A), S=S1} = 3, card(S1,_).